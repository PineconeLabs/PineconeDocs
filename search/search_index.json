{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Pinecone Documentation","text":"<p>Welcome to the official documentation for the Pinecone library! Pinecone is a C library designed for Machine Learning and Neural Networks. This guide will help you get started, understand the modules available, and dive into the API details. Table of Contents</p> <p>Introduction Installation Quick Start Modules Overview API Reference Examples Contributing License</p>"},{"location":"#introduction","title":"Introduction","text":"<p>Pinecone is designed to make [add any specific functionality] easier in C. This library provides optimized tools for [list any key features, like \"matrix manipulation, neural networks, and data preprocessing\"]. Installation</p>"},{"location":"#installing-pinecone","title":"Installing Pinecone","text":"<p>See INSTALLATION</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Here's a quick example to get started with Pinecone:</p> <pre><code>#include \"pinecone.h\"\n#include &lt;stdio.h&gt;\n\nint main() {\n    int number_imgs = 3000;\n    Img** imgs = csvToImg(\"data/mnist_test.csv\", number_imgs);\n    NeuralNetwork* net = nnLoad(\"testing_net\");\n    double score = nnPredictImgs(net, imgs, 1000);\n    printf(\"Score: %1.5f\\n\", score);\n}\n</code></pre>"},{"location":"#modules-overview","title":"Modules Overview","text":"<p>Pinecone is organized into several modules to streamline different functionalities:</p> <pre><code>Matrix Operations: Functions for creating, manipulating, and performing operations on matrices.\nNeural Networks: Utilities to build and run basic neural networks.\nImage Processing: Functions for image transformations and preprocessing.\n</code></pre> <p>Refer to the API Reference section for in-depth details on each module.</p>"},{"location":"#api-reference","title":"API Reference","text":"<p>The following sections cover each function provided by Pinecone, organized by module:</p> <pre><code>Matrix Functions: Functions to initialize, transpose, and perform mathematical operations on matrices.\nNeural Network Functions: Neural network creation, activation functions, and training utilities.\nImage Processing Functions: Image manipulation and data handling tools.\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>See the examples/ directory for sample programs that demonstrate how to use the Pinecone library in practical applications. Contributing</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to Pinecone! Please see CONTRIBUTING.md for guidelines on reporting issues, submitting code, and joining discussions. License</p>"},{"location":"#license","title":"License","text":"<p>Pinecone is distributed under the GPL 3.0 License. See LICENSE for more details.</p>"},{"location":"installation/","title":"Install Pinecone","text":"<p>To use Pinecone in your C program, follow these steps:</p> <p>Download the Repository Clone or download the Pinecone repository from GitHub.</p> <pre><code>git clone https://github.com/PineconeLabs/Pinecone.git\ncd Pinecone\n</code></pre> <p>Build the Library Run make in the root directory of the repository to build Pinecone.</p> <pre><code>make\n</code></pre> <p>Include Header File Copy the build/pinecone.h file to your project\u2019s include directory:</p> <pre><code>cp build/pinecone.h /path/to/your/project/include/\n</code></pre> <p>Link Against Pinecone Link your project against libpinecone.a by adding it to your linker flags:</p> <pre><code>gcc your_program.c path/to/libpinecone.a -o your_program\n</code></pre>"}]}